{"filter":false,"title":"tests.py","tooltip":"/polls/tests.py","undoManager":{"mark":49,"position":49,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":3,"column":0},"end":{"row":3,"column":15}},"text":"import datetime"},{"action":"insertText","range":{"start":{"row":3,"column":15},"end":{"row":4,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":4,"column":0},"end":{"row":20,"column":0}},"lines":["","from django.utils import timezone","from django.test import TestCase","","from polls.models import Question","","class QuestionMethodTests(TestCase):","","    def test_was_published_recently_with_future_question(self):","        \"\"\"","        was_published_recently() should return False for questions whose","        pub_date is in the future","        \"\"\"","        time = timezone.now() + datetime.timedelta(days=30)","        future_question = Question(pub_date=time)","        self.assertEqual(future_question.was_published_recently(), False)"]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":6,"column":0},"end":{"row":6,"column":32}},"text":"from django.test import TestCase"},{"action":"removeText","range":{"start":{"row":5,"column":33},"end":{"row":6,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":5,"column":33},"end":{"row":6,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":4,"column":0},"end":{"row":5,"column":0}},"nl":"\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":4,"column":0},"end":{"row":5,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":1,"column":0}},"nl":"\n","lines":["from django.test import TestCase"]},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":2,"column":0}},"lines":["from django.test import TestCase"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":1,"column":0},"end":{"row":2,"column":0}},"nl":"\n","lines":["from django.test import TestCase"]},{"action":"insertLines","range":{"start":{"row":2,"column":0},"end":{"row":3,"column":0}},"lines":["from django.test import TestCase"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":2,"column":0},"end":{"row":3,"column":0}},"nl":"\n","lines":["from django.test import TestCase"]},{"action":"insertLines","range":{"start":{"row":3,"column":0},"end":{"row":4,"column":0}},"lines":["from django.test import TestCase"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":3,"column":0},"end":{"row":4,"column":0}},"nl":"\n","lines":["from django.test import TestCase"]},{"action":"insertLines","range":{"start":{"row":4,"column":0},"end":{"row":5,"column":0}},"lines":["from django.test import TestCase"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":4,"column":0},"end":{"row":5,"column":0}},"nl":"\n","lines":["from django.test import TestCase"]},{"action":"insertLines","range":{"start":{"row":5,"column":0},"end":{"row":6,"column":0}},"lines":["from django.test import TestCase"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":5,"column":0},"end":{"row":6,"column":0}},"nl":"\n","lines":["from django.test import TestCase"]},{"action":"insertLines","range":{"start":{"row":6,"column":0},"end":{"row":7,"column":0}},"lines":["from django.test import TestCase"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":6,"column":0},"end":{"row":7,"column":0}},"nl":"\n","lines":["from django.test import TestCase"]},{"action":"insertLines","range":{"start":{"row":5,"column":0},"end":{"row":6,"column":0}},"lines":["from django.test import TestCase"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":5,"column":0},"end":{"row":6,"column":0}},"nl":"\n","lines":["from django.test import TestCase"]},{"action":"insertLines","range":{"start":{"row":4,"column":0},"end":{"row":5,"column":0}},"lines":["from django.test import TestCase"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":4,"column":0},"end":{"row":5,"column":0}},"nl":"\n","lines":["from django.test import TestCase"]},{"action":"insertLines","range":{"start":{"row":3,"column":0},"end":{"row":4,"column":0}},"lines":["from django.test import TestCase"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":3,"column":0},"end":{"row":4,"column":0}},"nl":"\n","lines":["from django.test import TestCase"]},{"action":"insertLines","range":{"start":{"row":2,"column":0},"end":{"row":3,"column":0}},"lines":["from django.test import TestCase"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":2,"column":0},"end":{"row":3,"column":0}},"nl":"\n","lines":["from django.test import TestCase"]},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":2,"column":0}},"lines":["from django.test import TestCase"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":1,"column":0},"end":{"row":2,"column":0}},"nl":"\n","lines":["from django.test import TestCase"]},{"action":"insertLines","range":{"start":{"row":0,"column":0},"end":{"row":1,"column":0}},"lines":["from django.test import TestCase"]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":11,"column":10},"end":{"row":11,"column":11}},"text":"\""}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":11,"column":9},"end":{"row":11,"column":10}},"text":"\""}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":11,"column":8},"end":{"row":11,"column":9}},"text":"\""}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":11,"column":8},"end":{"row":11,"column":9}},"text":"'"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":11,"column":9},"end":{"row":11,"column":10}},"text":"'"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":11,"column":10},"end":{"row":11,"column":11}},"text":"'"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":10},"end":{"row":14,"column":11}},"text":"\""}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":9},"end":{"row":14,"column":10}},"text":"\""}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":8},"end":{"row":14,"column":9}},"text":"\""}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":8},"end":{"row":14,"column":9}},"text":"'"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":9},"end":{"row":14,"column":10}},"text":"'"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":10},"end":{"row":14,"column":11}},"text":"'"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":0},"end":{"row":19,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":19,"column":0},"end":{"row":19,"column":56}},"text":"def test_was_published_recently_with_old_question(self):"},{"action":"insertText","range":{"start":{"row":19,"column":56},"end":{"row":20,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":20,"column":0},"end":{"row":35,"column":0}},"lines":["    \"\"\"","    was_published_recently() should return False for questions whose","    pub_date is older than 1 day","    \"\"\"","    time = timezone.now() - datetime.timedelta(days=30)","    old_question = Question(pub_date=time)","    self.assertEqual(old_question.was_published_recently(), False)","","def test_was_published_recently_with_recent_question(self):","    \"\"\"","    was_published_recently() should return True for questions whose","    pub_date is within the last day","    \"\"\"","    time = timezone.now() - datetime.timedelta(hours=1)","    recent_question = Question(pub_date=time)"]},{"action":"insertText","range":{"start":{"row":35,"column":0},"end":{"row":35,"column":68}},"text":"    self.assertEqual(recent_question.was_published_recently(), True)"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":19,"column":0},"end":{"row":19,"column":4}},"text":"    "},{"action":"insertText","range":{"start":{"row":20,"column":0},"end":{"row":20,"column":4}},"text":"    "},{"action":"insertText","range":{"start":{"row":21,"column":0},"end":{"row":21,"column":4}},"text":"    "},{"action":"insertText","range":{"start":{"row":22,"column":0},"end":{"row":22,"column":4}},"text":"    "},{"action":"insertText","range":{"start":{"row":23,"column":0},"end":{"row":23,"column":4}},"text":"    "},{"action":"insertText","range":{"start":{"row":24,"column":0},"end":{"row":24,"column":4}},"text":"    "},{"action":"insertText","range":{"start":{"row":25,"column":0},"end":{"row":25,"column":4}},"text":"    "},{"action":"insertText","range":{"start":{"row":26,"column":0},"end":{"row":26,"column":4}},"text":"    "},{"action":"insertText","range":{"start":{"row":27,"column":0},"end":{"row":27,"column":4}},"text":"    "},{"action":"insertText","range":{"start":{"row":28,"column":0},"end":{"row":28,"column":4}},"text":"    "},{"action":"insertText","range":{"start":{"row":29,"column":0},"end":{"row":29,"column":4}},"text":"    "},{"action":"insertText","range":{"start":{"row":30,"column":0},"end":{"row":30,"column":4}},"text":"    "},{"action":"insertText","range":{"start":{"row":31,"column":0},"end":{"row":31,"column":4}},"text":"    "},{"action":"insertText","range":{"start":{"row":32,"column":0},"end":{"row":32,"column":4}},"text":"    "},{"action":"insertText","range":{"start":{"row":33,"column":0},"end":{"row":33,"column":4}},"text":"    "},{"action":"insertText","range":{"start":{"row":34,"column":0},"end":{"row":34,"column":4}},"text":"    "},{"action":"insertText","range":{"start":{"row":35,"column":0},"end":{"row":35,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":35,"column":72},"end":{"row":36,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":36,"column":0},"end":{"row":36,"column":8}},"text":"        "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":36,"column":4},"end":{"row":36,"column":8}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":36,"column":4},"end":{"row":37,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":37,"column":0},"end":{"row":37,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":37,"column":4},"end":{"row":37,"column":45}},"text":"def create_question(question_text, days):"},{"action":"insertText","range":{"start":{"row":37,"column":45},"end":{"row":38,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":38,"column":0},"end":{"row":45,"column":0}},"lines":["    \"\"\"","    Creates a question with the given `question_text` published the given","    number of `days` offset to now (negative for questions published","    in the past, positive for questions that have yet to be published).","    \"\"\"","    time = timezone.now() + datetime.timedelta(days=days)","    return Question.objects.create(question_text=question_text,"]},{"action":"insertText","range":{"start":{"row":45,"column":0},"end":{"row":45,"column":49}},"text":"                                   pub_date=time)"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":37,"column":0},"end":{"row":37,"column":4}},"text":"    "},{"action":"removeText","range":{"start":{"row":38,"column":0},"end":{"row":38,"column":4}},"text":"    "},{"action":"removeText","range":{"start":{"row":39,"column":0},"end":{"row":39,"column":4}},"text":"    "},{"action":"removeText","range":{"start":{"row":40,"column":0},"end":{"row":40,"column":4}},"text":"    "},{"action":"removeText","range":{"start":{"row":41,"column":0},"end":{"row":41,"column":4}},"text":"    "},{"action":"removeText","range":{"start":{"row":42,"column":0},"end":{"row":42,"column":4}},"text":"    "},{"action":"removeText","range":{"start":{"row":43,"column":0},"end":{"row":43,"column":4}},"text":"    "},{"action":"removeText","range":{"start":{"row":44,"column":0},"end":{"row":44,"column":4}},"text":"    "},{"action":"removeText","range":{"start":{"row":45,"column":0},"end":{"row":45,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":0},"end":{"row":38,"column":4}},"text":"    "},{"action":"insertText","range":{"start":{"row":39,"column":0},"end":{"row":39,"column":4}},"text":"    "},{"action":"insertText","range":{"start":{"row":40,"column":0},"end":{"row":40,"column":4}},"text":"    "},{"action":"insertText","range":{"start":{"row":41,"column":0},"end":{"row":41,"column":4}},"text":"    "},{"action":"insertText","range":{"start":{"row":42,"column":0},"end":{"row":42,"column":4}},"text":"    "},{"action":"insertText","range":{"start":{"row":43,"column":0},"end":{"row":43,"column":4}},"text":"    "},{"action":"insertText","range":{"start":{"row":44,"column":0},"end":{"row":44,"column":4}},"text":"    "},{"action":"insertText","range":{"start":{"row":45,"column":0},"end":{"row":45,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":45,"column":49},"end":{"row":46,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":46,"column":0},"end":{"row":46,"column":35}},"text":"                                   "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":46,"column":35},"end":{"row":47,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":47,"column":0},"end":{"row":47,"column":35}},"text":"                                   "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":47,"column":34},"end":{"row":47,"column":35}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":47,"column":0},"end":{"row":47,"column":34}},"text":"                                  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":0},"end":{"row":47,"column":34}},"text":"class QuestionViewTests(TestCase):"},{"action":"insertText","range":{"start":{"row":47,"column":34},"end":{"row":48,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":48,"column":0},"end":{"row":103,"column":0}},"lines":["    def test_index_view_with_no_questions(self):","        \"\"\"","        If no questions exist, an appropriate message should be displayed.","        \"\"\"","        response = self.client.get(reverse('polls:index'))","        self.assertEqual(response.status_code, 200)","        self.assertContains(response, \"No polls are available.\")","        self.assertQuerysetEqual(response.context['latest_question_list'], [])","","    def test_index_view_with_a_past_question(self):","        \"\"\"","        Questions with a pub_date in the past should be displayed on the","        index page","        \"\"\"","        create_question(question_text=\"Past question.\", days=-30)","        response = self.client.get(reverse('polls:index'))","        self.assertQuerysetEqual(","            response.context['latest_question_list'],","            ['<Question: Past question.>']","        )","","    def test_index_view_with_a_future_question(self):","        \"\"\"","        Questions with a pub_date in the future should not be displayed on","        the index page.","        \"\"\"","        create_question(question_text=\"Future question.\", days=30)","        response = self.client.get(reverse('polls:index'))","        self.assertContains(response, \"No polls are available.\",","                            status_code=200)","        self.assertQuerysetEqual(response.context['latest_question_list'], [])","","    def test_index_view_with_future_question_and_past_question(self):","        \"\"\"","        Even if both past and future questions exist, only past questions","        should be displayed.","        \"\"\"","        create_question(question_text=\"Past question.\", days=-30)","        create_question(question_text=\"Future question.\", days=30)","        response = self.client.get(reverse('polls:index'))","        self.assertQuerysetEqual(","            response.context['latest_question_list'],","            ['<Question: Past question.>']","        )","","    def test_index_view_with_two_past_questions(self):","        \"\"\"","        The questions index page may display multiple questions.","        \"\"\"","        create_question(question_text=\"Past question 1.\", days=-30)","        create_question(question_text=\"Past question 2.\", days=-5)","        response = self.client.get(reverse('polls:index'))","        self.assertQuerysetEqual(","            response.context['latest_question_list'],","            ['<Question: Past question 2.>', '<Question: Past question 1.>']"]},{"action":"insertText","range":{"start":{"row":103,"column":0},"end":{"row":103,"column":9}},"text":"        )"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":4,"column":0},"end":{"row":4,"column":44}},"text":"from django.core.urlresolvers import reverse"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":54,"column":39},"end":{"row":54,"column":62}},"text":"No polls are available."},{"action":"insertText","range":{"start":{"row":54,"column":39},"end":{"row":54,"column":70}},"text":"No current polls are available."},{"action":"removeText","range":{"start":{"row":76,"column":39},"end":{"row":76,"column":62}},"text":"No polls are available."},{"action":"insertText","range":{"start":{"row":76,"column":39},"end":{"row":76,"column":70}},"text":"No current polls are available."}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":103,"column":9},"end":{"row":104,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":104,"column":0},"end":{"row":104,"column":8}},"text":"        "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":104,"column":4},"end":{"row":104,"column":8}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":104,"column":0},"end":{"row":104,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":104,"column":0},"end":{"row":105,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":105,"column":0},"end":{"row":105,"column":41}},"text":"class QuestionIndexDetailTests(TestCase):"},{"action":"insertText","range":{"start":{"row":105,"column":41},"end":{"row":106,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":106,"column":0},"end":{"row":127,"column":0}},"lines":["    def test_detail_view_with_a_future_question(self):","        \"\"\"","        The detail view of a question with a pub_date in the future should","        return a 404 not found.","        \"\"\"","        future_question = create_question(question_text='Future question.',","                                          days=5)","        response = self.client.get(reverse('polls:detail',","                                   args=(future_question.id,)))","        self.assertEqual(response.status_code, 404)","","    def test_detail_view_with_a_past_question(self):","        \"\"\"","        The detail view of a question with a pub_date in the past should","        display the question's text.","        \"\"\"","        past_question = create_question(question_text='Past Question.',","                                        days=-5)","        response = self.client.get(reverse('polls:detail',","                                   args=(past_question.id,)))","        self.assertContains(response, past_question.question_text,"]},{"action":"insertText","range":{"start":{"row":127,"column":0},"end":{"row":127,"column":44}},"text":"                            status_code=200)"}]}]]},"ace":{"folds":[],"scrolltop":1145,"scrollleft":0,"selection":{"start":{"row":127,"column":44},"end":{"row":127,"column":44},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":80,"state":"start","mode":"ace/mode/python"}},"timestamp":1412638780803,"hash":"ef7fffdc4272f5f7f1ec88876cf791b40d9eaeb1"}